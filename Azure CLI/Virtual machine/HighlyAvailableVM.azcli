#Sample code with Azure CLI for build virtual machine

#Create a resource group 
az  group create --name SampleResourceGroup --location westeurope

#Create a virtual network 
az network vnet create --resource-group SampleResourceGroup --location westeurope  --name myVnet --subnet-name mySubnet

# Create a public IP address 
az network public-ip create --resource-group SampleResourceGroup --name  myPublicIP

# Create an Azure Load balancer 
az network lb probe create --resource-group SampleResourceGroup --name myLoadBalancer --public-ip-address myPublicIP \ 
  --frontend-ip-name FrontEndPool --backend-pool-name backentPool

# create an LB probe on port 80 
az network lb probe create --resource-group SampleResourceGroup --lb-name myLoadBalancer \ 
    --name healthProbe --protocol tcp --port 80

# creates an LB rule for port 80 
az network lb rule create --resource-group SampleResourceGroup --lb-name myLoadBalancer --name myLoadBalancerRuleWeb \
  --protocol tcp --frontend-port 80 --backend-port 80 --frontend-ip-name FrontEndPool \
  --backend-pool-name backEndPool --probe-name healthProbe

# create three NAT rules for port 22
for i in `seq 1 3`; do
  az network lb inbound-nat-rule create \
    --resource-group SampleResourceGroup --lb-name myLoadBalancer \
    --name myLoadBalancerRuleSSH$i --protocol tcp \
    --frontend-port 422$i --backend-port 22 \
    --frontend-ip-name FrontEndPool
done

#Create a network secutiry group 
az network nsg create --resource-group SampleResourceGroup --name myNetworkSecurityGroup

# create a network security group rule for port 22 
az network nsg rule create --resource-group SampleResourceGroup --nsg-name myNetworkSecurityGroup --name myNetworkSecurityGroupRuleSSH \
  --protocol tcp --direction inbound --source-address-prefix '*' --source-port-range '*'  \
  --destination-address-prefix '*' --destination-port-range 22 --access allow --priority 1000

# create a network security group rule for port 80
az network nsg rule create --resource-group SampleResourceGroup --nsg-name myNetworkSecurityGroup --name myNetworkSecurityGroupRuleHTTP \
--protocol tcp --direction inbound --priority 1001 --source-address-prefix '*' --source-port-range '*' \
--destination-address-prefix '*' --destination-port-range 80 --access allow --priority 2000


# Create three virtual network cards and associate with public IP address and NSG.
for i in `seq 1 3`; do
  az network nic create \
    --resource-group SampleResourceGroup --name myNic$i \
    --vnet-name myVnet --subnet mySubnet \
    --network-security-group myNetworkSecurityGroup --lb-name myLoadBalancer \
    --lb-address-pools myBackEndPool --lb-inbound-nat-rules myLoadBalancerRuleSSH$i
done

# Create an availability set.
az vm availability-set create --resource-group SampleResourceGroup --name myAvailabilitySet --platform-fault-domain-count 3 --platform-update-domain-count 3

# Create three virtual machines, this creates SSH keys if not present.
for i in `seq 1 3`; do
  az vm create \
    --resource-group SampleResourceGroup \
    --name myVM$i \
    --availability-set myAvailabilitySet \
    --nics myNic$i \
    --image UbuntuLTS \
    --generate-ssh-keys \
    --no-wait
done


# If you clean deployment please use: 
az group delete --name myResourceGroup
